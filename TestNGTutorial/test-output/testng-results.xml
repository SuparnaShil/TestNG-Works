<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="15" passed="13" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-03-24T13:50:33 BDT" name="Testing" finished-at="2021-03-24T13:50:33 BDT" duration-ms="318">
    <groups>
      <group name="smoke">
        <method signature="Day1.Demo1day12()[pri:0, instance:test.Day1@2133814f]" name="Demo1day12" class="test.Day1"/>
        <method signature="Day2.demo4day2()[pri:0, instance:test.Day2@4c15e7fd]" name="demo4day2" class="test.Day2"/>
        <method signature="Day3.loanFinall()[pri:0, instance:test.Day3@5276e6b0]" name="loanFinall" class="test.Day3"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2021-03-24T13:50:33 BDT" name="Regression" finished-at="2021-03-24T13:50:33 BDT" duration-ms="135">
      <class name="test.Day1">
        <test-method is-config="true" signature="Demo2day1()[pri:0, instance:test.Day1@2133814f]" started-at="2021-03-24T13:50:33 BDT" name="Demo2day1" finished-at="2021-03-24T13:50:33 BDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo2day1 -->
        <test-method is-config="true" signature="EveryTime()[pri:0, instance:test.Day1@2133814f]" started-at="2021-03-24T13:50:33 BDT" name="EveryTime" finished-at="2021-03-24T13:50:33 BDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EveryTime -->
        <test-method signature="Demo1day1()[pri:0, instance:test.Day1@2133814f]" started-at="2021-03-24T13:50:33 BDT" name="Demo1day1" finished-at="2021-03-24T13:50:33 BDT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo1day1 -->
        <test-method is-config="true" signature="EveryTime()[pri:0, instance:test.Day1@2133814f]" started-at="2021-03-24T13:50:33 BDT" name="EveryTime" finished-at="2021-03-24T13:50:33 BDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EveryTime -->
        <test-method signature="Demo1day11()[pri:0, instance:test.Day1@2133814f]" started-at="2021-03-24T13:50:33 BDT" name="Demo1day11" finished-at="2021-03-24T13:50:33 BDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo1day11 -->
        <test-method is-config="true" signature="EveryTime()[pri:0, instance:test.Day1@2133814f]" started-at="2021-03-24T13:50:33 BDT" name="EveryTime" finished-at="2021-03-24T13:50:33 BDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EveryTime -->
        <test-method signature="Demo1day12()[pri:0, instance:test.Day1@2133814f]" started-at="2021-03-24T13:50:33 BDT" name="Demo1day12" finished-at="2021-03-24T13:50:33 BDT" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo1day12 -->
        <test-method is-config="true" signature="EveryTime()[pri:0, instance:test.Day1@2133814f]" started-at="2021-03-24T13:50:33 BDT" name="EveryTime" finished-at="2021-03-24T13:50:33 BDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EveryTime -->
        <test-method signature="Demo3day1()[pri:0, instance:test.Day1@2133814f]" started-at="2021-03-24T13:50:33 BDT" name="Demo3day1" finished-at="2021-03-24T13:50:33 BDT" duration-ms="7" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day1.Demo3day1(Day1.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo3day1 -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method signature="demo1day2()[pri:0, instance:test.Day2@4c15e7fd]" started-at="2021-03-24T13:50:33 BDT" name="demo1day2" finished-at="2021-03-24T13:50:33 BDT" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo1day2 -->
        <test-method signature="demo4day2()[pri:0, instance:test.Day2@4c15e7fd]" started-at="2021-03-24T13:50:33 BDT" name="demo4day2" finished-at="2021-03-24T13:50:33 BDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo4day2 -->
        <test-method is-config="true" signature="demo2day2()[pri:0, instance:test.Day2@4c15e7fd]" started-at="2021-03-24T13:50:33 BDT" name="demo2day2" finished-at="2021-03-24T13:50:33 BDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo2day2 -->
      </class> <!-- test.Day2 -->
    </test> <!-- Regression -->
    <test started-at="2021-03-24T13:50:33 BDT" name="New test" finished-at="2021-03-24T13:50:33 BDT" duration-ms="86">
      <class name="test.Day1">
        <test-method is-config="true" signature="Demo5day1()[pri:0, instance:test.Day1@2133814f]" started-at="2021-03-24T13:50:33 BDT" name="Demo5day1" finished-at="2021-03-24T13:50:33 BDT" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo5day1 -->
        <test-method is-config="true" signature="Demo4day1()[pri:0, instance:test.Day1@2133814f]" started-at="2021-03-24T13:50:33 BDT" name="Demo4day1" finished-at="2021-03-24T13:50:33 BDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo4day1 -->
      </class> <!-- test.Day1 -->
      <class name="test.Day3">
        <test-method signature="loanFinalkk(java.lang.String)[pri:0, instance:test.Day3@5276e6b0]" started-at="2021-03-24T13:50:33 BDT" name="loanFinalkk" finished-at="2021-03-24T13:50:33 BDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.youtube.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loanFinalkk -->
        <test-method signature="loanFinall()[pri:0, instance:test.Day3@5276e6b0]" started-at="2021-03-24T13:50:33 BDT" name="loanFinall" finished-at="2021-03-24T13:50:33 BDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loanFinall -->
        <test-method signature="loanFinalww(java.lang.String, java.lang.String)[pri:0, instance:test.Day3@5276e6b0]" started-at="2021-03-24T13:50:33 BDT" name="loanFinalww" finished-at="2021-03-24T13:50:33 BDT" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loanFinalww -->
        <test-method signature="login(java.lang.String, java.lang.String)[pri:0, instance:test.Day3@5276e6b0]" started-at="2021-03-24T13:50:33 BDT" name="login" data-provider="getData" finished-at="2021-03-24T13:50:33 BDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Fristname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="login(java.lang.String, java.lang.String)[pri:0, instance:test.Day3@5276e6b0]" started-at="2021-03-24T13:50:33 BDT" name="login" data-provider="getData" finished-at="2021-03-24T13:50:33 BDT" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Secondname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="login(java.lang.String, java.lang.String)[pri:0, instance:test.Day3@5276e6b0]" started-at="2021-03-24T13:50:33 BDT" name="login" data-provider="getData" finished-at="2021-03-24T13:50:33 BDT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Thirdname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="loanFinalk()[pri:0, instance:test.Day3@5276e6b0]" started-at="2021-03-24T13:50:33 BDT" name="loanFinalk" finished-at="2021-03-24T13:50:33 BDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loanFinalk -->
        <test-method signature="loanFinalw()[pri:0, instance:test.Day3@5276e6b0]" started-at="2021-03-24T13:50:33 BDT" name="loanFinalw" finished-at="2021-03-24T13:50:33 BDT" depends-on-methods="test.Day3.loanFinall, test.Day3.loanFinalww" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loanFinalw -->
      </class> <!-- test.Day3 -->
    </test> <!-- New test -->
  </suite> <!-- Testing -->
</testng-results>
